{
    "version": "https://jsonfeed.org/version/1",
    "title": "SnowRoll Blog • All posts by \"crawler\" tag",
    "description": "分享经验，记录生活",
    "home_page_url": "https://snowroll.github.io",
    "items": [
        {
            "id": "https://snowroll.github.io/deobfuscator-crawler/",
            "url": "https://snowroll.github.io/deobfuscator-crawler/",
            "title": "Github爬虫",
            "date_published": "2020-11-13T02:01:41.000Z",
            "content_html": "<blockquote>\n<p><strong>任务需求：</strong></p>\n<p>下载 100 个 Github 上的 powershell 脚本作为数据库，用于之后的研究分析</p>\n</blockquote>\n<h1 id=\"解析github搜索页面获取页面上的仓库名称\"><a class=\"markdownIt-Anchor\" href=\"#解析github搜索页面获取页面上的仓库名称\">#</a> 解析 Github 搜索页面，获取页面上的仓库名称</h1>\n<h2 id=\"分析github搜索请求\"><a class=\"markdownIt-Anchor\" href=\"#分析github搜索请求\">#</a> 分析 Github 搜索请求</h2>\n<p>在 Github 上进行 powershell 搜索，选定语言为 <code>PowerShell</code> ，结果如下图</p>\n<img data-src=\"/deobfuscator-crawler/github-search.png\" class=\"\">\n<p>观察链接地址 <code>https://github.com/search?l=PowerShell&amp;p=2&amp;q=powershell&amp;type=Repositories</code>  可知，有 4 个搜索参数：  <code>l</code>   编程语言、  <code>p</code>  当前页数、 <code>q</code>  搜索内容、  <code>type</code>  搜索类型</p>\n<h2 id=\"python-获取指定url的html并进行解析\"><a class=\"markdownIt-Anchor\" href=\"#python-获取指定url的html并进行解析\">#</a> python 获取指定 url 的 html 并进行解析</h2>\n<p>参考博客： <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2J1bGw1MjEvYXJ0aWNsZS9kZXRhaWxzLzgzNDQ4Nzgx\">https://blog.csdn.net/bull521/article/details/83448781</span></p>\n<p>第三方库： requests 文档 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9yZXF1ZXN0cy5yZWFkdGhlZG9jcy5pby96aF9DTi9sYXRlc3Qv\">https://requests.readthedocs.io/zh_CN/latest/</span></p>\n<p>pyquery 文档 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9weXF1ZXJ5LnJlYWR0aGVkb2NzLmlvL2VuL2xhdGVzdC9hcGkuaHRtbA==\">https://pyquery.readthedocs.io/en/latest/api.html</span></p>\n<p>代码如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests  <span class=\"comment\"># 发送请求，获取响应</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> pyquery <span class=\"keyword\">import</span> PyQuery <span class=\"keyword\">as</span> pq  <span class=\"comment\"># 解析html</span></span><br><span class=\"line\"></span><br><span class=\"line\">base_url = <span class=\"string\">&quot;https://github.com&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">从url中获取html文本，解析并返回列表</span></span><br><span class=\"line\"><span class=\"string\">@param url 要解析的链接</span></span><br><span class=\"line\"><span class=\"string\">@return list [&#x27;仓库名1&#x27;, &#x27;仓库名2&#x27;, ...]</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_repos</span>(<span class=\"params\">url</span>):</span></span><br><span class=\"line\">    headers = &#123;  <span class=\"comment\"># 设置访问头，Host - 请求服务器域名， User-Agent - 设置用户代理为浏览器，避免反爬</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;Host&#x27;</span> : <span class=\"string\">&#x27;github.com&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;User-Agent&#x27;</span> : <span class=\"string\">&#x27;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.67 Safari/537.36&#x27;</span>,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    r = requests.get(url=url, headers=headers)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> r.status_code != <span class=\"number\">200</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;网页加载错误&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> []</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">#开始解析标签</span></span><br><span class=\"line\">    doc = pq(r.text)</span><br><span class=\"line\">    repos = []</span><br><span class=\"line\">    items = doc(<span class=\"string\">&#x27;a&#x27;</span>).<span class=\"built_in\">filter</span>(<span class=\"string\">&#x27;.v-align-middle&#x27;</span>).items()  </span><br><span class=\"line\">    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> items:</span><br><span class=\"line\">        repos.append(item.text())</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> repos</span><br><span class=\"line\">    </span><br><span class=\"line\">url = <span class=\"string\">&quot;https://github.com/search?l=PowerShell&amp;q=powershell&amp;type=Repositories&amp;p=1&quot;</span></span><br><span class=\"line\">repo_list = get_repos(url)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(repo_list)</span><br></pre></td></tr></table></figure>\n<p>结果如下：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">&#x27;lazywinadmin/PowerShell&#x27;</span>, <span class=\"string\">&#x27;clymb3r/PowerShell&#x27;</span>, <span class=\"string\">&#x27;danielbohannon/Invoke-Obfuscation&#x27;</span>, <span class=\"string\">&#x27;RamblingCookieMonster/PowerShell&#x27;</span>, <span class=\"string\">&#x27;PowerShellMafia/PowerSploit&#x27;</span>, <span class=\"string\">&#x27;MicrosoftDocs/PowerShell-Docs&#x27;</span>, <span class=\"string\">&#x27;FuzzySecurity/PowerShell-Suite&#x27;</span>, <span class=\"string\">&#x27;dahlbyk/posh-git&#x27;</span>, <span class=\"string\">&#x27;janikvonrotz/awesome-powershell&#x27;</span>, <span class=\"string\">&#x27;dracula/powershell&#x27;</span>]</span><br></pre></td></tr></table></figure>\n<h2 id=\"代码解析\"><a class=\"markdownIt-Anchor\" href=\"#代码解析\">#</a> 代码解析：</h2>\n<p>使用 <code>requests</code>  获取 Github 响应</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\">r = requests.get(<span class=\"string\">&quot;https://github.com/search?l=PowerShell&amp;q=powershell&amp;type=Repositories&amp;p=1&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(r.text)  <span class=\"comment\"># 获取Github响应的html</span></span><br></pre></td></tr></table></figure>\n<div style=\"width:100%;margin:auto\"><img data-src=\"/deobfuscator-crawler/github-reponse.png\" class=\"\"></div>\n<p>分析返回的 html 文本，其中关于仓库的信息如下所示</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;f4 text-normal&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;v-align-middle&quot;</span> <span class=\"attr\">data-hydro-click</span>=<span class=\"string\">&quot;&#123;<span class=\"symbol\">&amp;quot;</span>event_type<span class=\"symbol\">&amp;quot;</span>:<span class=\"symbol\">&amp;quot;</span>search_result.click<span class=\"symbol\">&amp;quot;</span>,<span class=\"symbol\">&amp;quot;</span>payload<span class=\"symbol\">&amp;quot;</span>:&#123;<span class=\"symbol\">&amp;quot;</span>page_number<span class=\"symbol\">&amp;quot;</span>:1,<span class=\"symbol\">&amp;quot;</span>per_page<span class=\"symbol\">&amp;quot;</span>:10,<span class=\"symbol\">&amp;quot;</span>query<span class=\"symbol\">&amp;quot;</span>:<span class=\"symbol\">&amp;quot;</span>powershell<span class=\"symbol\">&amp;quot;</span>,<span class=\"symbol\">&amp;quot;</span>result_position<span class=\"symbol\">&amp;quot;</span>:2,<span class=\"symbol\">&amp;quot;</span>click_id<span class=\"symbol\">&amp;quot;</span>:9093330,<span class=\"symbol\">&amp;quot;</span>result<span class=\"symbol\">&amp;quot;</span>:&#123;<span class=\"symbol\">&amp;quot;</span>id<span class=\"symbol\">&amp;quot;</span>:9093330,<span class=\"symbol\">&amp;quot;</span>global_relay_id<span class=\"symbol\">&amp;quot;</span>:<span class=\"symbol\">&amp;quot;</span>MDEwOlJlcG9zaXRvcnk5MDkzMzMw<span class=\"symbol\">&amp;quot;</span>,<span class=\"symbol\">&amp;quot;</span>model_name<span class=\"symbol\">&amp;quot;</span>:<span class=\"symbol\">&amp;quot;</span>Repository<span class=\"symbol\">&amp;quot;</span>,<span class=\"symbol\">&amp;quot;</span>url<span class=\"symbol\">&amp;quot;</span>:<span class=\"symbol\">&amp;quot;</span>https://github.com/clymb3r/PowerShell<span class=\"symbol\">&amp;quot;</span>&#125;,<span class=\"symbol\">&amp;quot;</span>originating_url<span class=\"symbol\">&amp;quot;</span>:<span class=\"symbol\">&amp;quot;</span>https://github.com/search?l=PowerShell<span class=\"symbol\">&amp;amp;</span>q=powershell<span class=\"symbol\">&amp;amp;</span>type=Repositories<span class=\"symbol\">&amp;amp;</span>p=1<span class=\"symbol\">&amp;quot;</span>,<span class=\"symbol\">&amp;quot;</span>user_id<span class=\"symbol\">&amp;quot;</span>:24938068&#125;&#125;&quot;</span> <span class=\"attr\">data-hydro-click-hmac</span>=<span class=\"string\">&quot;309d4f59b977bc66a4a930b1805d5bbc5cd5d76519a9d1f421fb14f094e253c8&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/clymb3r/PowerShell&quot;</span>&gt;</span>clymb3r/<span class=\"tag\">&lt;<span class=\"name\">em</span>&gt;</span>PowerShell<span class=\"tag\">&lt;/<span class=\"name\">em</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>所以只需获取类  <code>v-align-middle</code>  对应的文本值即可，此时就需要用到另一个第三方库  <code>pyquery</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">from</span> pyquery <span class=\"keyword\">import</span> PyQuery <span class=\"keyword\">as</span> pq </span><br><span class=\"line\"></span><br><span class=\"line\">r = requests.get(<span class=\"string\">&quot;https://github.com/search?l=PowerShell&amp;q=powershell&amp;type=Repositories&amp;p=1&quot;</span>)</span><br><span class=\"line\">doc = pq(r.text)  </span><br><span class=\"line\"><span class=\"comment\"># 找到所有标签为`a`, 类别为&#x27;v-align-middle&#x27;的项 类名前要加&#x27;.&#x27;</span></span><br><span class=\"line\">items = doc(<span class=\"string\">&#x27;a&#x27;</span>).<span class=\"built_in\">filter</span>(<span class=\"string\">&#x27;.v-align-middle&#x27;</span>).items()  </span><br><span class=\"line\"><span class=\"comment\"># items是一个生成器，通过 for 遍历</span></span><br><span class=\"line\">repos = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> items:</span><br><span class=\"line\">    repos.append(item.text())</span><br><span class=\"line\"><span class=\"built_in\">print</span>(repos)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">&#x27;adbertram/Random-PowerShell-Work&#x27;</span>, <span class=\"string\">&#x27;BornToBeRoot/PowerShell&#x27;</span>, <span class=\"string\">&#x27;specterops/at-ps&#x27;</span>, <span class=\"string\">&#x27;EmpireProject/Empire&#x27;</span>, <span class=\"string\">&#x27;nullbind/Powershellery&#x27;</span>, <span class=\"string\">&#x27;microsoftgraph/powershell-intune-samples&#x27;</span>, <span class=\"string\">&#x27;SublimeText/PowerShell&#x27;</span>, <span class=\"string\">&#x27;ZHacker13/ReverseTCPShell&#x27;</span>, <span class=\"string\">&#x27;MicrosoftDocs/windows-powershell-docs&#x27;</span>, <span class=\"string\">&#x27;MicksITBlogs/PowerShell&#x27;</span>]</span><br></pre></td></tr></table></figure>\n<p>成功拿到搜索页面的仓库名</p>\n<h1 id=\"在github仓库中遍历找到所有的powershell文件\"><a class=\"markdownIt-Anchor\" href=\"#在github仓库中遍历找到所有的powershell文件\">#</a> 在 Github 仓库中遍历，找到所有的 powershell 文件</h1>\n<h2 id=\"分析单个仓库的html文本信息\"><a class=\"markdownIt-Anchor\" href=\"#分析单个仓库的html文本信息\">#</a> 分析单个仓库的 html 文本信息</h2>\n<p>此时 url 设置为 “<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2RyYWN1bGEvcG93ZXJzaGVsbA==\">https://github.com/dracula/powershell</span>”，仓库目录如下所示</p>\n<div style=\"width:100%;margin:auto\"><img data-src=\"/deobfuscator-crawler/dracula-repo.png\" class=\"\"></div>\n<p>分析 html 文本，找到文件链接，如下所示</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">文件超链接</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;js-navigation-open link-gray-dark&quot;</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;INSTALL.md&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/dracula/powershell/blob/master/INSTALL.md&quot;</span>&gt;</span>INSTALL.md<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">目录超链接</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;js-navigation-open link-gray-dark&quot;</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;theme&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/dracula/powershell/tree/master/theme&quot;</span>&gt;</span>theme<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>文件和目录链接的区别来源于 Git 的四种 object， <code>tree</code>  |   <code>blob</code>  |  <code>commit</code>  |  <code>tag</code>   分别代表  <code>目录</code>  ｜ <code> 文件</code>  ｜  <code>提交信息</code>  ｜  <code>标签，commit别名</code></p>\n<h2 id=\"使用pyquery解析\"><a class=\"markdownIt-Anchor\" href=\"#使用pyquery解析\">#</a> 使用 pyquery 解析</h2>\n<p><strong>outer_html</strong>(<em>method=‘html’</em>)</p>\n<p>获得第一个选中元素的 html 表示</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; d = PyQuery(<span class=\"string\">&#x27;&lt;div&gt;&lt;span class=&quot;red&quot;&gt;toto&lt;/span&gt; rocks&lt;/div&gt;&#x27;</span>)</span><br><span class=\"line\">&gt;&gt;&gt; <span class=\"built_in\">print</span>(d(<span class=\"string\">&#x27;span&#x27;</span>).outer_html())</span><br><span class=\"line\">&lt;span class=<span class=\"string\">&quot;red&quot;</span>&gt;toto&lt;/span&gt;</span><br></pre></td></tr></table></figure>\n<p>代码如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">from</span> pyquery <span class=\"keyword\">import</span> PyQuery <span class=\"keyword\">as</span> pq</span><br><span class=\"line\"></span><br><span class=\"line\">base_url = <span class=\"string\">&quot;https://github.com&quot;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">找到Github当前页面下的ps文件，并将目录返回</span></span><br><span class=\"line\"><span class=\"string\">@param path 相对路径 /dracula/powershell</span></span><br><span class=\"line\"><span class=\"string\">@return list list [psfile0, psfile1, ...] [dir0, dir1, ...]</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">find_ps</span>(<span class=\"params\">path</span>):</span></span><br><span class=\"line\">    headers = &#123;  </span><br><span class=\"line\">        <span class=\"string\">&#x27;Host&#x27;</span> : <span class=\"string\">&#x27;github.com&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;User-Agent&#x27;</span> : <span class=\"string\">&#x27;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.67 Safari/537.36&#x27;</span>,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    full_url = base_url + path</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:  </span><br><span class=\"line\">        r = requests.get(full_url, headers=headers, timeout=(<span class=\"number\">7</span>, <span class=\"number\">10</span>))  </span><br><span class=\"line\">    <span class=\"keyword\">except</span> Exception:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> [], []</span><br><span class=\"line\">    </span><br><span class=\"line\">    ps, dirs = [], []  <span class=\"comment\"># 检测到的.ps1文件 和 目录</span></span><br><span class=\"line\">    doc = pq(r.text)</span><br><span class=\"line\">    items = doc(<span class=\"string\">&#x27;a&#x27;</span>).<span class=\"built_in\">filter</span>(<span class=\"string\">&#x27;.js-navigation-open&#x27;</span>).items()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> items:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">&quot;/tree/&quot;</span> <span class=\"keyword\">in</span> item.outer_html():  <span class=\"comment\"># 检查html中是否包含 &#x27;/tree/&#x27;，是则认定节点为目录信息</span></span><br><span class=\"line\">            dirs.append(item.text())</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"string\">&quot;.ps1&quot;</span> == item.text():</span><br><span class=\"line\">            ps.append(item.text())</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">pass</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> ps, dirs</span><br><span class=\"line\"></span><br><span class=\"line\">path = <span class=\"string\">&quot;/dracula/powershell&quot;</span></span><br><span class=\"line\">ps, dirs = find_ps(path)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(ps, dirs)</span><br></pre></td></tr></table></figure>\n<p>结果如下：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[] [<span class=\"string\">&#x27;.github&#x27;</span>, <span class=\"string\">&#x27;dist&#x27;</span>, <span class=\"string\">&#x27;images&#x27;</span>, <span class=\"string\">&#x27;theme&#x27;</span>]</span><br></pre></td></tr></table></figure>\n<p>从上面结果可知，程序正确地返回了目录名。但由于一个仓库中有多个子目录，所以更希望程序能够返回  <code>href=&quot;/dracula/powershell/tree/master/theme&quot;</code>  中的链接地址。但是 pyquery 功能有限，只针对 html 中的标签做了解析，所以需要需要更强有力的工具  <code>BeautifulSoup</code></p>\n<h2 id=\"使用beautifulsoup解析\"><a class=\"markdownIt-Anchor\" href=\"#使用beautifulsoup解析\">#</a> 使用 BeautifulSoup 解析</h2>\n<p>文档： <span class=\"exturl\" data-url=\"aHR0cHM6Ly9iZWF1dGlmdWxzb3VwLnJlYWR0aGVkb2NzLmlvL3poX0NOL3Y0LjQuMC8=\">https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/</span></p>\n<p>部分文档内容粘贴如下：</p>\n<p>一段 html 文本</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">html_doc = <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">&lt;html&gt;&lt;head&gt;&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;&lt;/head&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;body&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;p class=&quot;title&quot;&gt;&lt;b&gt;The Dormouse&#x27;s story&lt;/b&gt;&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&lt;p class=&quot;story&quot;&gt;Once upon a time there were three little sisters; and their names were</span></span><br><span class=\"line\"><span class=\"string\">&lt;a href=&quot;http://example.com/elsie&quot; class=&quot;sister&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span></span><br><span class=\"line\"><span class=\"string\">&lt;a href=&quot;http://example.com/lacie&quot; class=&quot;sister&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt; and</span></span><br><span class=\"line\"><span class=\"string\">&lt;a href=&quot;http://example.com/tillie&quot; class=&quot;sister&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;;</span></span><br><span class=\"line\"><span class=\"string\">and they lived at the bottom of a well.&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n<p>使用 Beautiful Soup 找到所有 &lt;a&gt; 标签中的链接</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup</span><br><span class=\"line\"></span><br><span class=\"line\">soup = BeautifulSoup(html_doc, <span class=\"string\">&#x27;html.parser&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> link <span class=\"keyword\">in</span> soup.find_all(<span class=\"string\">&#x27;a&#x27;</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(link[<span class=\"string\">&#x27;href&#x27;</span>])</span><br></pre></td></tr></table></figure>\n<p>结果如下：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://example.com/elsie</span><br><span class=\"line\">http://example.com/lacie</span><br><span class=\"line\">http://example.com/tillie</span><br></pre></td></tr></table></figure>\n<p>搜索 ps 文件函数修改如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup  <span class=\"comment\"># 添加BeautifulSoup 头文件</span></span><br><span class=\"line\"></span><br><span class=\"line\">base_url = <span class=\"string\">&quot;https://github.com&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">find_ps</span>(<span class=\"params\">path</span>):</span></span><br><span class=\"line\">    headers = &#123;  </span><br><span class=\"line\">        <span class=\"string\">&#x27;Host&#x27;</span> : <span class=\"string\">&#x27;github.com&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;User-Agent&#x27;</span> : <span class=\"string\">&#x27;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.67 Safari/537.36&#x27;</span>,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    full_url = base_url + <span class=\"string\">&quot;/&quot;</span> + path</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:  </span><br><span class=\"line\">        r = requests.get(full_url, headers=headers, timeout=(<span class=\"number\">7</span>, <span class=\"number\">10</span>))  </span><br><span class=\"line\">    <span class=\"keyword\">except</span> Exception:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> [], []</span><br><span class=\"line\">    </span><br><span class=\"line\">    ps, dirs = [], []  <span class=\"comment\"># 检测到的.ps1文件 和 目录</span></span><br><span class=\"line\">    soup = BeautifulSoup(r.text, <span class=\"string\">&#x27;html.parser&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> link <span class=\"keyword\">in</span> soup.find_all(<span class=\"string\">&quot;a&quot;</span>, class_=<span class=\"string\">&quot;js-navigation-open&quot;</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">&quot;/tree&quot;</span> <span class=\"keyword\">in</span> link[<span class=\"string\">&#x27;href&#x27;</span>]:</span><br><span class=\"line\">            dirs.append(link[<span class=\"string\">&#x27;href&#x27;</span>])</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"string\">&quot;.ps1&quot;</span> == link[<span class=\"string\">&#x27;href&#x27;</span>][-<span class=\"number\">4</span>:]:</span><br><span class=\"line\">            ps.append(link[<span class=\"string\">&#x27;href&#x27;</span>])</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">pass</span></span><br><span class=\"line\">          </span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(ps)):  <span class=\"comment\"># 删除链接中的&quot;/blob&quot;，方便后续的下载过程</span></span><br><span class=\"line\">        ps[i] = ps[i].replace(<span class=\"string\">&quot;/blob/&quot;</span>, <span class=\"string\">&quot;/&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ps, dirs</span><br><span class=\"line\"></span><br><span class=\"line\">path = <span class=\"string\">&quot;/dracula/powershell&quot;</span></span><br><span class=\"line\">ps, dirs = find_ps(path)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(ps, dirs)</span><br></pre></td></tr></table></figure>\n<p>结果如下：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[] [<span class=\"string\">&#x27;/dracula/powershell/tree/master/.github&#x27;</span>, <span class=\"string\">&#x27;/dracula/powershell/tree/master/dist&#x27;</span>, <span class=\"string\">&#x27;/dracula/powershell/tree/master/images&#x27;</span>, <span class=\"string\">&#x27;/dracula/powershell/tree/master/theme&#x27;</span>]</span><br></pre></td></tr></table></figure>\n<p>由于 python 递归过慢，所以采用伪队列的形式对 Github 的仓库目录进行遍历</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_ps_in_repo</span>(<span class=\"params\">path</span>):</span>  </span><br><span class=\"line\">    ps, dirs = [], [<span class=\"string\">&quot;/&quot;</span> + path]  <span class=\"comment\"># path - 仓库根目录链接 eg: dracula/powershell</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"built_in\">len</span>(dirs) != <span class=\"number\">0</span>:</span><br><span class=\"line\">        cur_ps, cur_dirs = find_ps(dirs[<span class=\"number\">0</span>])</span><br><span class=\"line\">        dirs.remove(dirs[<span class=\"number\">0</span>])  <span class=\"comment\"># 移除已访问过的目录链接</span></span><br><span class=\"line\">        dirs += cur_dirs</span><br><span class=\"line\">        ps += cur_ps</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ps</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(get_ps_in_repo(<span class=\"string\">&quot;/dracula/powershell&quot;</span>))</span><br></pre></td></tr></table></figure>\n<p>结果如下：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">&#x27;/dracula/powershell/master/theme/dracula-prompt-configuration.ps1&#x27;</span>]</span><br></pre></td></tr></table></figure>\n<p>只有一个 ps1 文件，与仓库实际情况相同相同</p>\n<p>由于我们需要下载 100 个以上的脚本文件，所以需要遍历多个仓库</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">traverse_repos</span>(<span class=\"params\">ps_num</span>):</span></span><br><span class=\"line\">    page = <span class=\"number\">1</span></span><br><span class=\"line\">    ps = []</span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">        search_url = <span class=\"string\">&#x27;https://github.com/search?l=PowerShell&amp;q=powershell&amp;type=Repositories&amp;p=&#x27;</span> + <span class=\"built_in\">str</span>(page)</span><br><span class=\"line\">        repos = get_repos(search_url)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> repo <span class=\"keyword\">in</span> repos:</span><br><span class=\"line\">            cur_ps = get_ps_in_repo(repo)</span><br><span class=\"line\">            ps += cur_ps</span><br><span class=\"line\">                </span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&quot;ps.txt&quot;</span>, <span class=\"string\">&quot;w&quot;</span>) <span class=\"keyword\">as</span> f:  <span class=\"comment\"># 这个过程比较漫长，加个存档</span></span><br><span class=\"line\">                f.write(<span class=\"built_in\">str</span>(ps))</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(ps) &gt; ps_num:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> ps</span><br><span class=\"line\">        page += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">ps = traverse_repos(<span class=\"number\">100</span>)</span><br></pre></td></tr></table></figure>\n<p>至此，我们就拿到了 100 个.ps1 文件的链接。这个访问的时间非常长，暂时不知道怎么优化，有解决方案的小伙伴可以留言交流一下。</p>\n<h1 id=\"多线程下载github文件\"><a class=\"markdownIt-Anchor\" href=\"#多线程下载github文件\">#</a> 多线程下载 Github 文件</h1>\n<h2 id=\"下载单个github文件\"><a class=\"markdownIt-Anchor\" href=\"#下载单个github文件\">#</a> 下载单个 github 文件</h2>\n<p>可以通过 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29t\">https://raw.githubusercontent.com</span> 来下载单个 github 文件</p>\n<div style=\"width:100%;margin:auto\"><img data-src=\"/deobfuscator-crawler/raw-github.png\" class=\"\"></div>\n<p>上述文件的链接地址为 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL01pY2tzSVRCbG9ncy9Qb3dlclNoZWxsL3Jhdy9tYXN0ZXIvMjAxM1Jldml0QnVpbGRpbmdQcmVtaXVtVW5pbnN0YWxsZXIucHMx\">https://github.com/MicksITBlogs/PowerShell/raw/master/2013RevitBuildingPremiumUninstaller.ps1</span></p>\n<p>使用  <code>wget</code>  测试能否正常下载</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget  https://github.com/dracula/powershell/raw/master/README.md</span><br></pre></td></tr></table></figure>\n<p>显示跳转到 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2RyYWN1bGEvcG93ZXJzaGVsbC9tYXN0ZXIvUkVBRE1FLm1k\">https://raw.githubusercontent.com/dracula/powershell/master/README.md</span> 进行下载</p>\n<p>所以直接将下载前缀改为 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29t\">https://raw.githubusercontent.com</span></p>\n<p>代码如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">download</span>(<span class=\"params\">url</span>):</span></span><br><span class=\"line\">    raw_base_url = <span class=\"string\">&quot;https://raw.githubusercontent.com&quot;</span></span><br><span class=\"line\">    file_url = raw_base_url + url</span><br><span class=\"line\"></span><br><span class=\"line\">    file_name = file_url.split(<span class=\"string\">&quot;/&quot;</span>)[-<span class=\"number\">1</span>] </span><br><span class=\"line\">    parent_dir = <span class=\"string\">&quot;./&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> os.path.exists(parent_dir + file_name):  <span class=\"comment\"># 重名的话就随机生成字符串</span></span><br><span class=\"line\">        file_name = randomstr(<span class=\"number\">4</span>) + <span class=\"string\">&quot;_&quot;</span> + file_name</span><br><span class=\"line\">    file_name = parent_dir + file_name</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        r = requests.get(file_url)</span><br><span class=\"line\">        <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_name, <span class=\"string\">&#x27;wb&#x27;</span>) <span class=\"keyword\">as</span> f:  <span class=\"comment\"># r.content 为二进制信息</span></span><br><span class=\"line\">            f.write(r.content)</span><br><span class=\"line\">    <span class=\"keyword\">except</span> requests.ConnectionError:</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\">download(<span class=\"string\">&quot;/dracula/powershell/master/screenshot.png&quot;</span>) </span><br></pre></td></tr></table></figure>\n<h2 id=\"多线程下载\"><a class=\"markdownIt-Anchor\" href=\"#多线程下载\">#</a> 多线程下载</h2>\n<p>不复杂，直接上代码</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> multiprocessing <span class=\"keyword\">import</span> Pool  <span class=\"comment\"># 多线程</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">multi_process</span>(<span class=\"params\">ps_files</span>):</span></span><br><span class=\"line\">    process_pool = Pool(<span class=\"number\">4</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> ps_files:  <span class=\"comment\"># 并发，异步非阻塞模式</span></span><br><span class=\"line\">        process_pool.apply_async(download, args=(i,))  </span><br><span class=\"line\">    process_pool.close()</span><br><span class=\"line\">    process_pool.join()  <span class=\"comment\"># 等待所有结果执行完毕</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>\n  <center>《或者所谓春天》（节选）\n</p>\n<p>\n  <center><i>余光中</i>\n</p><p>\n  <center>所谓童年</center>\n  <center>所谓抗战</center>\n  <center>所谓高二</center>\n  <center>所谓大三</center>\n  <center>所谓蜜月，并非不月蚀</center>\n  <center>所谓贫穷，并非不美丽</center>\n  <center>所谓妻，曾是新娘</center>\n  <center>所谓新娘，曾是女友</center>\n  <center>所谓女友，曾非常害羞</center>\n  <center>所谓不成名以及成名</center>\n  <center>所谓朽以及不朽</center>\n  <center>或者所谓春天</center>\n</p>\n</blockquote>\n",
            "tags": [
                "crawler"
            ]
        }
    ]
}