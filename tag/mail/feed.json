{
    "version": "https://jsonfeed.org/version/1",
    "title": "SnowRoll Blog • All posts by \"mail\" tag",
    "description": "分享经验，记录生活",
    "home_page_url": "https://snowroll.github.io",
    "items": [
        {
            "id": "https://snowroll.github.io/security-mail/",
            "url": "https://snowroll.github.io/security-mail/",
            "title": "邮件安全之spf协议",
            "date_published": "2020-10-18T02:24:32.000Z",
            "content_html": "<h3 id=\"内容摘要\"><a class=\"markdownIt-Anchor\" href=\"#内容摘要\">#</a> 内容摘要</h3>\n<ul>\n<li>spf 协议简介</li>\n<li>nslookup 检索域名对应的 spf 记录</li>\n<li>python 快速检索 spf 记录</li>\n</ul>\n<a id=\"more\"></a>\n<h3 id=\"1-spf协议简介\"><a class=\"markdownIt-Anchor\" href=\"#1-spf协议简介\">#</a> 1. spf 协议简介</h3>\n<ul>\n<li>\n<p>SPF 全称 Sender Policy Framework，发件人策略机制</p>\n<p>是以<strong> IP 地址</strong>认证电子邮件发件人身份的技术，<strong>域名所有者</strong>通过在<strong> DNS</strong> 中发布<strong> SPF 记录</strong>来授权合法使用该域名发送邮件的 IP 地址</p>\n<p>例子如下：</p>\n<div style=\"width:50%;margin:auto\"><img data-src=\"/security-mail/mail-head.png\" class=\"\" title=\"邮件头数据\"></div>\n<p>从这个邮件头的数据中，我们可以看到 <code>From</code>  字段显示发件人是来自 163 的用户，但是在 <code>smtp协议</code> 中，这部分可以由用户自行修改。也就意味着，这个发件人地址完全可以是伪造的。</p>\n<p>邮件的发送过程可以由下图简略所示，图片来源：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuemFjaGFyeWppYS5tZS9pbmRleC5waHAvYXJjaGl2ZXMvMTMv\">https://www.zacharyjia.me/index.php/archives/13/</span></p>\n<div style=\"width:50%;margin:auto\"><img data-src=\"/security-mail/smtp.png\" class=\"\" title=\"发件流程\"></div>\n<p><code>Received</code>  字段是由邮件服务器在邮件转发过程中自动添加在邮件头部的，我们可以从中提取出发件服务器的原始 ip <code>123.126.97.1</code> ，通过 163 的 spf 记录来验证这份邮件是否是伪造的。</p>\n<p>163 的 spf 记录如下：</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">163.com\ttext = &quot;v=spf1 include:spf.163.com -all&quot;</span><br><span class=\"line\">spf.163.com\ttext = &quot;v=spf1 include:a.spf.163.com include:b.spf.163.com include:c.spf.163.com include:d.spf.163.com include:e.spf.163.com -all&quot;</span><br><span class=\"line\">a.spf.163.com\ttext = &quot;v=spf1 ip4:220.181.12.0/22 ip4:220.181.31.0/24 ip4:123.125.50.0/24 ip4:220.181.72.0/24 ip4:123.58.178.0/24 ip4:123.58.177.0/24 ip4:113.108.225.0/24 ip4:218.107.63.0/24 ip4:123.58.189.128/25 ip4:123.126.96.0/24 ip4:123.126.97.0/24 -all&quot;</span><br></pre></td></tr></table></figure>\n<p>通过上面的结果，我们可以看到  <code>ip4:123.126.97.0/24</code>  被授权使用 <code>163.com</code>  的域名，所以这封邮件是真实的。</p>\n</li>\n<li>\n<p>接下来，我们来简单学习一下 spf 的语法规则</p>\n<p>参考文档：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZXJ2aWNlLm1haWwucXEuY29tL2NnaS1iaW4vaGVscD9zdWJ0eXBlPTEmYW1wO25vPTEwMDE1MDUmYW1wO2lkPTE2\">https://service.mail.qq.com/cgi-bin/help?subtype=1&amp;no=1001505&amp;id=16</span></p>\n<p>SPF 记录由 SPF 版本和指定 IP 组成</p>\n<p><code>record = version terms *SP</code></p>\n<p>version =  <code>&quot;v=spf1&quot;</code>  即指定 SPF 的版本为 spf1</p>\n<p>terms 由机制 mechanisms 和修改符 modifiers（可选）组成，mechanisms 用来描述哪些 IP 被允许使用该域名发送邮件</p>\n<p>Mechanisms 包含以下几种类型</p>\n<p>mechanism = （all / include / a / mx / ptr / ip4 /exists）</p>\n<p><strong>（一） 机制 mechanisms</strong></p>\n<p>每个 mechanism 有四种前缀（默认前缀为 &quot;+&quot;）</p>\n<p>“+”  Pass</p>\n<p>“-”  Fail</p>\n<p>“~”  SoftFail</p>\n<p>“?”  Neutral</p>\n<p>在一条 SPF 记录中，从左到右依次对每个 mechanism 进行验证。对一个 mechanism 进行检测，有三种结果可能发生：IP 匹配成功，IP 匹配失败或者返回异常。如果 IP 匹配成功，处理结果返回该 mechanism 的前缀；如果 IP 匹配失败，继续下一个 mechanism；如果返回异常，则 mechanism 结束并返回该异常值；如果没有 mechanism 或者 modifier 匹配，则结果返回 “Neutral”。</p>\n<p>如果不存在 SPF 记录，则返回 “None”；如果在 DNS 解析过程中出现临时性错误，则返回 “TempError”；如果存在某些语法错误或者评估错误（如该域指向不为人知的机制），则返回 “PermError”。</p>\n<p>SPF 记录验证可能返回的结果如下：</p>\n<table>\n<thead>\n<tr>\n<th>Result</th>\n<th>Explanation</th>\n<th>Intended action</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Pass</td>\n<td>SPF 记录验证该发信 IP 为合法的</td>\n<td>接收邮件</td>\n</tr>\n<tr>\n<td>Fail</td>\n<td>SPF 记录验证该发信 IP 是不合法的</td>\n<td>拒绝邮件</td>\n</tr>\n<tr>\n<td>SoftFail</td>\n<td>SPF 验证该发信 IP 不是合法的，但是不采取强制措施</td>\n<td>接收邮件但作标识</td>\n</tr>\n<tr>\n<td>Neutral</td>\n<td>SPF 记录没有明确说明发信 IP 是否合法的信息</td>\n<td>接收邮件</td>\n</tr>\n<tr>\n<td>None</td>\n<td>域名没有设置 SPF 记录或者 SPF 记录验证没有结果</td>\n<td>接收邮件</td>\n</tr>\n<tr>\n<td>PermError</td>\n<td>发生永久性错误（如：SPF 记录格式错误）</td>\n<td>没有规定</td>\n</tr>\n<tr>\n<td>TempError</td>\n<td>发生临时性错误</td>\n<td>接收或拒绝邮件</td>\n</tr>\n</tbody>\n</table>\n<p><strong>1.</strong>  “all” 机制</p>\n<p><strong>“all” 表示所有 IP 都匹配</strong>。通常放在 SPF 记录末尾，<strong>表示处理剩下的所有情况。</strong></p>\n<p>例如：</p>\n<p>“v=spf1 mx -all” 表示允许所有该域的 MX 邮件服务器发送邮件，禁止其他的。</p>\n<p>“v=spf1 -all” 表示该域不会发送任何邮件。</p>\n<p>“v=spf1 +all” 表示域名所有者认为 SPF 是没有用的或者并不关心（任何服务器都可使用该域名发送邮件）。</p>\n<p><strong>2.</strong>  “ipv4” 机制</p>\n<p>ip4:&lt;ip4-address&gt;</p>\n<p>ip4:&lt;ip4-network&gt;/&lt;prefix-length&gt;</p>\n<p>如果没有提供 prefix-length ，默认为 /32。</p>\n<p><strong>3.</strong>  “a” 机制</p>\n<p>格式为：</p>\n<p>a</p>\n<p>a/&lt;prefix-length&gt;</p>\n<p>a:&lt;domain&gt;</p>\n<p>a:&lt;domain&gt;/&lt;prefix-length&gt;</p>\n<p>所有 A 记录都会检测。如果客户端 IP 在这些记录中，则该机制结果匹配。</p>\n<p>若没有指定域，则使用当前域。</p>\n<p>A 记录必须与客户端 IP 地址完全匹配，除非提供前缀长度，在这种情况下，A 记录查询返回的 IP 地址将扩展到其相应的 CIDR 前缀，且客户端 IP 将在其子网中查询。</p>\n<p>例如：</p>\n<p>“v=spf1 a -all”</p>\n<p>表示当前域被使用。</p>\n<p>“v=spf1 a:example.com -all”</p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3huLS1leGFtcGxlLWU3M2tseTA1YXAyeTZtcncwd2VwM2cuY29t\">等价于当前域为 example.com</span>。</p>\n<p>“v=spf1 a:mailers.example.com -all”</p>\n<p>表示指定 mailers.example.com 的主机 IP 可以外发邮件。</p>\n<p>“v=spf1 a/24 a:offsite.example.com/24 -all”</p>\n<p>如果 example.com 解析到 192.0.2.1，那么整个 C 类地址 192.0.2.0/24 将作为客户端 IP 地址外发邮件。同样，如果 offsite.example.com 返回多个 A 记录，每个 IP 地址将被扩展到 CIDR 子网。</p>\n<p><strong>4.</strong>  “include” 机制</p>\n<p>格式为：</p>\n<p>include:&lt;domain&gt;</p>\n<p>表示指定域查询匹配。若查询返回不匹配或者有错误，接着处理下一个机制。警告：如果指定域没有一个有效的 SPF 记录，结果将返回永久性错误。某些邮件接收者会根据 “PermError” 拒绝接收邮件。</p>\n<p>例如：在下面例子中，客户端 IP 为 1.2.3.4，<span class=\"exturl\" data-url=\"aHR0cDovL3huLS1leGFtcGxlLWU3M2t5NjFhcHBvdjN0LmNvbQ==\">当前域为 example.com</span>.</p>\n<p>“v=spf1 include:example.com -all”</p>\n<p>若 example.com 没有 SPF 记录，结果为 “PermError”。</p>\n<p>假设 example.com 的 SPF 记录为 “v=spf1 a -all”，查询 example.com 的 A 记录，</p>\n<p>若与 1.2.3.4 匹配，返回 “Pass”；</p>\n<p>若不匹配，处理包含域的 “-all”，include 整个匹配失败；</p>\n<p>从这个例子的外部指令集可见，最终的结果仍为失败。</p>\n<p>因为信任关系，“include” 机制可能会被认为有越权行为。需要确保 “include” 机制不会给跨用户伪造的信息 SPF 验证返回 “Pass”。除非对指定的其他域技术机制到位，从而反正跨用户伪造，“include” 机制应该提供 “Neutral” 处理结果而非 “Pass”。即在 “include:” 前添加 “?” 前缀。例如：</p>\n<p>“v=spf1 ?include:example.com -all”</p>\n<p>如此看来，“include” 机制不宜选择。</p>\n<p>更多详细内容可以参考 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZXJ2aWNlLm1haWwucXEuY29tL2NnaS1iaW4vaGVscD9zdWJ0eXBlPTEmYW1wO25vPTEwMDE1MDUmYW1wO2lkPTE2\">https://service.mail.qq.com/cgi-bin/help?subtype=1&amp;no=1001505&amp;id=16</span></p>\n</li>\n<li>\n<p>根据上述语法，我们再分析 163 的 spf 记录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">163.com\ttext &#x3D; &quot;v&#x3D;spf1 include:spf.163.com -all&quot;</span><br><span class=\"line\">spf.163.com\ttext &#x3D; &quot;v&#x3D;spf1 include:a.spf.163.com include:b.spf.163.com include:c.spf.163.com include:d.spf.163.com include:e.spf.163.com -all&quot;</span><br><span class=\"line\">a.spf.163.com\ttext &#x3D; &quot;v&#x3D;spf1 ip4:220.181.12.0&#x2F;22 ip4:220.181.31.0&#x2F;24 ip4:123.125.50.0&#x2F;24 ip4:220.181.72.0&#x2F;24 ip4:123.58.178.0&#x2F;24 ip4:123.58.177.0&#x2F;24 ip4:113.108.225.0&#x2F;24 ip4:218.107.63.0&#x2F;24 ip4:123.58.189.128&#x2F;25 ip4:123.126.96.0&#x2F;24 ip4:123.126.97.0&#x2F;24 -all&quot;</span><br></pre></td></tr></table></figure>\n<p>第一条记录，说明 163.com 的 spf 记录可以通过 <code>spf.163.com</code>  进行查询， <code>-all</code>  表明除了这个记录包含的 ip 地址，都会匹配失败</p>\n<p>第二条记录，说明 <code>spf.163.com</code>  的 spf 记录包含在 <code>a.spf.163.com</code> 、 <code>b.spf.163.com</code> 、 <code>c.spf.163.com</code> 、 <code>d.spf.163.com</code> 、 <code>e.spf.163.com</code>  几个域名的记录之中</p>\n<p>第三条记录，说明了 <code>a.spf.163.com</code>  所包含的 ip 地址集合，其中 <code>123.126.97.1</code>  在 <code>ip4:123.126.97.0/24</code>  之中，所以发件人确实为 163 的用户。</p>\n</li>\n</ul>\n<h3 id=\"2-nslookup-检索域名的spf记录\"><a class=\"markdownIt-Anchor\" href=\"#2-nslookup-检索域名的spf记录\">#</a> 2. nslookup 检索域名的 spf 记录</h3>\n<ul>\n<li>\n<p>命令行</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nslookup</span><br><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"built_in\">type</span>=TXT</span><br><span class=\"line\">163.com</span><br><span class=\"line\">spf.163.com</span><br><span class=\"line\">a.spf.163.com</span><br></pre></td></tr></table></figure>\n<p>实际运行结果如下：</p>\n<div style=\"width:50%;margin:auto\"><img data-src=\"/security-mail/nslookup.png\" class=\"\" title=\"nslookup运行结果\"></div>\n</li>\n</ul>\n<h3 id=\"3-python-快速查询spf记录\"><a class=\"markdownIt-Anchor\" href=\"#3-python-快速查询spf记录\">#</a> 3. python 快速查询 spf 记录</h3>\n<ul>\n<li>\n<p>第三方包 SPF2IP， netaddr</p>\n<p>下载</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install netaddr</span><br><span class=\"line\">pip install SPF2IP</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>样例程序</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> SPF2IP <span class=\"keyword\">import</span> SPF2IP</span><br><span class=\"line\">spf_record = SPF2IP(<span class=\"string\">&#x27;163.com&#x27;</span>).IPArray(<span class=\"string\">&#x27;4&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<p>结果：</p>\n<div style=\"width:50%;margin:auto\"><img data-src=\"/security-mail/spf2ip.png\" class=\"\" title=\"结果示例\"></div>\n<p>快速判断一个 ip 是否在一个子网中</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> netaddr <span class=\"keyword\">import</span> IPNetwork, IPAddress</span><br><span class=\"line\"><span class=\"keyword\">if</span> IPAddress(<span class=\"string\">&#x27;123.126.97.1&#x27;</span>) <span class=\"keyword\">in</span> IPNetwork(<span class=\"string\">&#x27;123/126.97.0/24&#x27;</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;True&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<p>结果：</p>\n<div style=\"width:50%;margin:auto\"><img data-src=\"/security-mail/netaddr.png\" class=\"\"></div>\n</li>\n</ul>\n<center>萬葉集\n<center>鸣神の　少しとよみて　さし昙り 雨も降らんか　君を留めん</center>\n<center>鸣神の　少しとよみて　降らずとも　我は止まらん　妹し留めば</center>\n<center>万叶集</center>\n<center>隐约雷鸣 阴霾天空 但盼风雨来 能留你在此</center>\n<center>隐约雷鸣 阴霾天空 即使风无雨 我亦留此地</center>\n",
            "tags": [
                "mail"
            ]
        }
    ]
}