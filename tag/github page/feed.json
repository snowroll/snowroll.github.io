{
    "version": "https://jsonfeed.org/version/1",
    "title": "SnowRoll Blog • All posts by \"github page\" tag",
    "description": "分享经验，记录生活",
    "home_page_url": "https://snowroll.github.io",
    "items": [
        {
            "id": "https://snowroll.github.io/git-githubpage/",
            "url": "https://snowroll.github.io/git-githubpage/",
            "title": "GitHub Page 个人博客配置记录",
            "date_published": "2020-09-24T09:06:25.000Z",
            "content_html": "<h3 id=\"内容目录\"><a class=\"markdownIt-Anchor\" href=\"#内容目录\">#</a> 内容目录</h3>\n<ul>\n<li>使用 hexo 搭建自己的 Github Page 博客</li>\n<li>设置自定义域名，并添加 https 保护</li>\n<li>国内外分流访问</li>\n</ul>\n<a id=\"more\"></a>\n<h3 id=\"1-使用hexo搭建github-page-博客\"><a class=\"markdownIt-Anchor\" href=\"#1-使用hexo搭建github-page-博客\">#</a> 1. 使用 hexo 搭建 Github Page 博客</h3>\n<p>这部分工作主要参考的是 zjufangzh 的博客，链接地址为 https://blog.csdn.net/sinat_37781304/article/details/82729029</p>\n<ul>\n<li>\n<p>首先下载 hexo</p>\n<p>hexo 官方网站 https://hexo.io/zh-cn/</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br><span class=\"line\"><span class=\"comment\"># Linux npm 安装（如果没有）</span></span><br><span class=\"line\">sudo apt-get install nodejs</span><br><span class=\"line\">sudo apt-get install npm</span><br></pre></td></tr></table></figure>\n<p>在合适的目录开始创建自己的博客</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init blog  <span class=\"comment\"># 初始化名字为blog的博客</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> blog</span><br><span class=\"line\">npm install  </span><br></pre></td></tr></table></figure>\n<p>下载完成之后的目录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node_modules&#x2F;  依赖包</span><br><span class=\"line\">scaffolds&#x2F;  生成文章的模板</span><br><span class=\"line\">source&#x2F;  博客内容，主要为md文件</span><br><span class=\"line\">themes&#x2F;  博客主题</span><br><span class=\"line\">public&#x2F;  博客的发布页面</span><br><span class=\"line\">_config.yml  博客网站的配置文件</span><br></pre></td></tr></table></figure>\n<p>运行</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean  <span class=\"comment\"># 清理之前的发布内容</span></span><br><span class=\"line\">hexo generate  <span class=\"comment\"># 生成新的发布页面，命令可简写为hexo g</span></span><br><span class=\"line\">hexo server  <span class=\"comment\"># 部署到本地localhost:4000，命令可简写为hexo s </span></span><br></pre></td></tr></table></figure>\n<p>浏览器打开 http://localhost:4000 即可看到效果</p>\n</li>\n<li>\n<p>博客部署到 Github Page 上</p>\n<p>登录 github，创建一个新的 repository，名字为  <code>username.github.io</code> ，例如我的 github 账户名为 snowroll，所以 repository 的名字为 <code>snowroll.github.io</code></p>\n<img data-src=\"/git-githubpage/repository_name.jpg\" class=\"\">\n<p>生成 ssh，添加到 github 中</p>\n<p>打开 git bash（如没有，请自行查询下载）</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name <span class=\"string\">&quot;yourname&quot;</span>  <span class=\"comment\"># yourname为你的github用户名</span></span><br><span class=\"line\">git config --global user.email <span class=\"string\">&quot;youremail&quot;</span>  <span class=\"comment\"># youremail为你的github对应的邮箱</span></span><br><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">&quot;youremail&quot;</span>  <span class=\"comment\"># -t 指定密钥类型，-C 公钥备注，一般写自己的邮箱 生成ssh，一路回车即可</span></span><br></pre></td></tr></table></figure>\n<p>找到生成的 <code>.ssh</code>  文件夹，打开</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id_rsa  # 私钥</span><br><span class=\"line\">id_rsa.pub  # 公钥</span><br><span class=\"line\">known_hosts  # 记录服务器端的Host，IP及rsa文件，作缓存用</span><br></pre></td></tr></table></figure>\n<p>复制 <code>id_rsa</code>  内的内容到剪切板，直接打开复制也可以</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pbcopy &lt; ./id_rsa.pub  <span class=\"comment\"># mac 系统下的命令行操作</span></span><br></pre></td></tr></table></figure>\n<p>打开 github 的个人设置中的 SSH and GPG keys，点击 New SSH key，将复制的内容粘贴进去即可</p>\n<p>测试是否成功</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@github.com</span><br></pre></td></tr></table></figure>\n<p>出现 You’ve successfully authenticated, but GitHub does not provide shell access. 提示即意味成功</p>\n<p>生成 ssh key 的参考博客，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzYxODMxL2FydGljbGUvZGV0YWlscy84ODcyNTY3MA==\">https://blog.csdn.net/qq_36761831/article/details/88725670</span></p>\n<p>将 hexo 与 GitHub 关联，修改 <code>blog/</code>  下的 <code>_config.yml</code></p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">\t<span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">\t<span class=\"attr\">repo:</span> <span class=\"string\">https://github.com/yourgithubname/yourgithubname.github.io.git</span></span><br><span class=\"line\">\t<span class=\"attr\">branch:</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n<p>注意在 <code>:</code>  后要添加空格，github 貌似要改 master 分支为 main，到时候可能需要更改配置</p>\n<p>安装 deploy-git，以便将博客部署到 GitHub</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<p>开始部署，更多命令请参考 https://hexo.io/zh-cn/docs/commands</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo d -g  <span class=\"comment\"># d 部署 -g 部署之前预先生成静态文件</span></span><br></pre></td></tr></table></figure>\n<p>成功之后，过一会就可以在 https://yourname.github.io 看到你的博客</p>\n</li>\n<li>\n<p>更改主题，撰写文章</p>\n<p>可以在 https://hexo.io/themes/ 下选择自己喜欢的主题，下载到 <code>themes/</code>  目录下</p>\n<img data-src=\"/git-githubpage/themes-folder.jpg\" class=\"\">\n<p><code>landscape</code>  是默认主题， <code>yilia-plus</code>  是我下载添加的主题，项目地址 https://github.com/JoeyBling/hexo-theme-yilia-plus</p>\n<p>更改 <code>blog/</code>  下的 <code>_config.yml</code></p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">theme:</span> <span class=\"string\">yilia-plus</span></span><br></pre></td></tr></table></figure>\n<p>重新部署即可生效，具体关于主题的各项设置，请参考各个主题的 github 项目说明文档</p>\n<p>开始写文章</p>\n<p>在 <code>source/post</code>  下的添加.md 文件即可，或者</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new paper</span><br></pre></td></tr></table></figure>\n<p>更多详细操作参考 https://hexo.io/zh-cn/docs/writing 和 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzM3NzgxMzA0L2FydGljbGUvZGV0YWlscy84MjcyOTAyOQ==\">https://blog.csdn.net/sinat_37781304/article/details/82729029</span></p>\n<p><em>Tips:  yilia-plus 配置 search 功能，在博客根目录下执行  <code>npm i hexo-generator-json-content --save</code> ， 在 <code>_config.yml</code>  中添加相关配置</em></p>\n</li>\n</ul>\n<h3 id=\"2-设置自定义域名添加https保护\"><a class=\"markdownIt-Anchor\" href=\"#2-设置自定义域名添加https保护\">#</a> 2.  设置自定义域名，添加 https 保护</h3>\n<ul>\n<li>\n<p>设置自定义域名</p>\n<p>在阿里云上购买一个域名，看个人需求，我购买了 snowroll.top 域名 (目前已失效)，主要是便宜 hhhhh。阿里云域名购买及解析教程链接 https://developer.aliyun.com/article/767435</p>\n<p>上面链接的域名操作的 “解析设置” 里，添加一条记录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">记录类型： CNAME  </span><br><span class=\"line\">主机记录： @  </span><br><span class=\"line\">解析线路：默认</span><br><span class=\"line\">记录值： yourname.github.io</span><br></pre></td></tr></table></figure>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3huLS15b3VybmFtZS1pbTJtajVvbzlicjlpaW5vZjluamtqaDZjODg3Ymt6ZXN6YWhhMjI0NGUzYmc0bTdkdTY4YmthMDkwajdsYnNvcDM0Zy5naXRodWIuaW8=\">这条解析记录应该是将你申请的域名解析关联到 yourname.github.io</span>，再通过 github 自己的 dns 服务器进行解析（个人理解，没有实际抓包看过）</p>\n<p>为了让域名生效，还得在 <code>yourname.github.io</code>  仓库的 setting 中，设置自定义的 Custom domain，示例如下</p>\n<img data-src=\"/git-githubpage/custom-domain.jpg\" class=\"\">\n<p>未添加 https 保护时，图中的 Enforce HTTPS 无法选中，也只能通过 http 访问自定义域名</p>\n<p>为了防止自定义域名失效，在 <code>blog</code>  的 <code>source/</code>  下新建 <code>CNAME</code>  文件，里面填上你的自定义域名即可</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">snowroll.top</span><br></pre></td></tr></table></figure>\n<p>可以重新部署，查看一下自己的域名是否生效（重新部署后，可能需要 1-2 分钟页面才能更新）</p>\n</li>\n<li>\n<p>添加 https 保护</p>\n<p>为了给自定义的域名，也添加 https 保护。我们在阿里云上申请一个免费的证书，教程链接 https://developer.aliyun.com/article/715576</p>\n<p>签发完成并进行完相关的设置后，可能需要 1-2 小时 https 保护才能生效，所以不用过于着急。</p>\n<p>至此，就可以开始愉快的写博客了。</p>\n</li>\n</ul>\n<h3 id=\"3-国内外分流访问\"><a class=\"markdownIt-Anchor\" href=\"#3-国内外分流访问\">#</a> 3. 国内外分流访问</h3>\n<ul>\n<li>\n<p>参考博客： <span class=\"exturl\" data-url=\"aHR0cHM6Ly9hc3VyYWRhLnpvbmUvcG9zdC9EZXBsb3ktSGV4b2Jsb2ctVG8tQ29kaW5nbmV0LUFuZC1HaXRIdWIv\">https://asurada.zone/post/Deploy-Hexoblog-To-Codingnet-And-GitHub/</span></p>\n<p>这篇博客讲解的很全面，按步骤走就可以。其中有些坑，我罗列在下面供大家参考</p>\n<ul>\n<li>\n<p>使用 coding 部署静态网站一直无法认证成功？</p>\n<p>A： 认证的腾讯云必须和 coding 是绑定的关系，实名认证之后才可以</p>\n<img data-src=\"/git-githubpage/static-blog.jpeg\" class=\"\">\n<p>在「个人设置」-「登录密码：前往腾讯云查看并更改」中进行绑定认证</p>\n</li>\n<li>\n<p>上述博客最后有一个 coding 开启 https 的功能，新版申请自定义域名后，证书认证通过后自动为 https，无需强制开启</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-问题汇总及解决\"><a class=\"markdownIt-Anchor\" href=\"#4-问题汇总及解决\">#</a> 4. 问题汇总及解决</h3>\n<ul>\n<li>\n<p>撰写文章，上传到 github 会导致图片丢失，不可见</p>\n<p>解决：</p>\n<ul>\n<li>\n<p>方案 1: 进行文件资源引用，官方文档 https://hexo.io/zh-cn/docs/asset-folders</p>\n</li>\n<li>\n<p>方案 2: 在 <code>source/</code>  下建一个 <code>images</code>  目录，将图片放入其中，文档中图片的引用统一为 <code>![img_alias](/images/test.jpg)</code>  格式</p>\n</li>\n</ul>\n</li>\n<li>\n<p>如何新建文件夹，不止是在 <code>source/_post/</code>  下</p>\n<p>解决： <code>hexo new page test</code>  会生成 <code>source/test/</code>  文件夹，但这个无法再 <code>test</code>  下加其他 md 文件，无法识别</p>\n</li>\n<li>\n<p>如何让点击完之后的网页直接在当前网页跳转，而不是打开多个网页？</p>\n<p>更改主题中_config.yml 中的 open_in_new: 均改为 false 即可</p>\n</li>\n<li>\n<p>添加代码块复制功能</p>\n<p>参考文章 https://codeantenna.com/a/pvakwyOYZ0</p>\n<p>上述文章针对的是 <code>yilia</code>  主题，所以迁移到 <code>yilia-plus</code>  需要做少许改动</p>\n<ul>\n<li>\n<p>利用 js 实现代码拷贝功能</p>\n<p>在 <code>hexo</code>  的根目录 <code>themes\\yilia-plus\\source\\lib</code>  中新建 <code>clipboard_use.js</code> ，如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">&quot;.highlight&quot;</span>).wrap(<span class=\"string\">&quot;&lt;div class=&#x27;code-wrapper&#x27; style=&#x27;position:relative&#x27;&gt;&lt;/div&gt;&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">/*页面载入完成后，创建复制按钮*/</span></span><br><span class=\"line\">!<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e, t, a</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/* code */</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> initCopyCode = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> copyHtml = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">        copyHtml += <span class=\"string\">&#x27;&lt;button class=&quot;btn-copy&quot; data-clipboard-snippet=&quot;&quot;&gt;&#x27;</span>;</span><br><span class=\"line\">        copyHtml += <span class=\"string\">&#x27;  &lt;i class=&quot;fa fa-clipboard&quot;&gt;&lt;/i&gt;&lt;span&gt;复制&lt;/span&gt;&#x27;</span>;</span><br><span class=\"line\">        copyHtml += <span class=\"string\">&#x27;&lt;/button&gt;&#x27;</span>;</span><br><span class=\"line\">        $(<span class=\"string\">&quot;.highlight .code&quot;</span>).before(copyHtml);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> clipboard = <span class=\"keyword\">new</span> ClipboardJS(<span class=\"string\">&#x27;.btn-copy&#x27;</span>, &#123;</span><br><span class=\"line\">            target: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">trigger</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> trigger.nextElementSibling;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        clipboard.on(<span class=\"string\">&#x27;success&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">            e.trigger.innerHTML = <span class=\"string\">&quot;&lt;i class=&#x27;fa fa-clipboard&#x27;&gt;&lt;/i&gt;&lt;span&gt;复制成功&lt;/span&gt;&quot;</span></span><br><span class=\"line\">            <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">                e.trigger.innerHTML = <span class=\"string\">&quot;&lt;i class=&#x27;fa fa-clipboard&#x27;&gt;&lt;/i&gt;&lt;span&gt;复制&lt;/span&gt;&quot;</span></span><br><span class=\"line\">            &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">           </span><br><span class=\"line\">            e.clearSelection();</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        clipboard.on(<span class=\"string\">&#x27;error&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">            e.trigger.innerHTML = <span class=\"string\">&quot;&lt;i class=&#x27;fa fa-clipboard&#x27;&gt;&lt;/i&gt;&lt;span&gt;复制失败&lt;/span&gt;&quot;</span></span><br><span class=\"line\">            <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">                e.trigger.innerHTML = <span class=\"string\">&quot;&lt;i class=&#x27;fa fa-clipboard&#x27;&gt;&lt;/i&gt;&lt;span&gt;复制&lt;/span&gt;&quot;</span></span><br><span class=\"line\">            &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">            e.clearSelection();</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    initCopyCode();</span><br><span class=\"line\">&#125;(<span class=\"built_in\">window</span>, <span class=\"built_in\">document</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>引入相关 js 文件</p>\n<p>在 <code>hexo</code>  的根目录下的 <code>themes\\yilia-plus\\layout\\layout.ejs</code>  文件的 <code>&lt;/body&gt;</code>  前引入（不是 <code>&lt;body&gt;</code> ，自己弄的时候犯蠢，结果调试了好久）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 代码块复制功能, 引入jQuery和clipboard --&gt;</span><br><span class=\"line\">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;clipboard@2.0.4&#x2F;dist&#x2F;clipboard.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class=\"line\">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;https:&#x2F;&#x2F;apps.bdimg.com&#x2F;libs&#x2F;jquery&#x2F;2.1.4&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class=\"line\">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&lt;%- url_for(&#39;lib&#x2F;clipboard_use.js&#39;) %&gt;&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>添加样式</p>\n<p>修改 <code>hexo</code>  的根目录下的 <code>themes\\yilia-plus\\source\\main.a5fda8.css</code> ，在末尾添加以下样式</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.btn-copy</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">    <span class=\"attribute\">cursor</span>: pointer;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#eee</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-image</span>: <span class=\"built_in\">linear-gradient</span>(<span class=\"number\">#fcfcfc</span>, <span class=\"number\">#eee</span>);</span><br><span class=\"line\">    <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#d5d5d5</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">    -webkit-user-select: none;</span><br><span class=\"line\">    -moz-user-select: none;</span><br><span class=\"line\">    -ms-user-select: none;</span><br><span class=\"line\">    user-select: none;</span><br><span class=\"line\">    -webkit-appearance: none;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">13px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-weight</span>: <span class=\"number\">700</span>;</span><br><span class=\"line\">    <span class=\"attribute\">line-height</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">    -webkit-<span class=\"attribute\">transition</span>: opacity .<span class=\"number\">3s</span> ease-in-out;</span><br><span class=\"line\">    -o-<span class=\"attribute\">transition</span>: opacity .<span class=\"number\">3s</span> ease-in-out;</span><br><span class=\"line\">    <span class=\"attribute\">transition</span>: opacity .<span class=\"number\">3s</span> ease-in-out;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">2px</span> <span class=\"number\">6px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">right</span>: <span class=\"number\">5px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">5px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.btn-copy</span> <span class=\"selector-tag\">span</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">margin-left</span>: <span class=\"number\">5px</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.code-wrapper</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-class\">.btn-copy</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<center>鹊桥仙·纤云弄巧\n</center>\n<center>宋·秦观\n<center>纤云弄巧，飞星传恨，银汉迢迢暗度。金风玉露一相逢，便胜却人间无数。\n<center>柔情似水，佳期如梦，忍顾鹊桥归路。两情若是久长时，又岂在朝朝暮暮。",
            "tags": [
                "github page"
            ]
        }
    ]
}