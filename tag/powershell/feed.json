{
    "version": "https://jsonfeed.org/version/1",
    "title": "SnowRoll Blog • All posts by \"powershell\" tag",
    "description": "分享经验，记录生活",
    "home_page_url": "https://snowroll.github.io",
    "items": [
        {
            "id": "https://snowroll.github.io/powershell-amsi-trace/",
            "url": "https://snowroll.github.io/powershell-amsi-trace/",
            "title": "利用事件写入捕获AMSI实际检测内容",
            "date_published": "2022-08-31T15:16:53.000Z",
            "content_html": "<h1 id=\"动机\"><a class=\"markdownIt-Anchor\" href=\"#动机\">#</a> 动机</h1>\n<p>在 PowerShell 命令行中执行 PowerShell 脚本时，windows 默认会将执行的内容传送给 AMSI 进行检测，如果检测结果认为执行内容中包含病毒，则拒绝执行，实现安全防护。</p>\n<p>AMSI 的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy93aW4zMi9hbXNpL2hvdy1hbXNpLWhlbHBz\">官方文档</span>宣称可以对混淆 PowerShell 脚本最终的无混淆结果进行检测，为了知道 AMSI 运行中具体对脚本的哪些内容进行了捕获检测，我们尝试截获输出传给 AMSI 的脚本内容。主要参考了 YouTube 上的一个<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1qaXhjTmotTWM0MA==\">技术视频</span>进行了实现。</p>\n<h1 id=\"具体做法\"><a class=\"markdownIt-Anchor\" href=\"#具体做法\">#</a> 具体做法</h1>\n<ol>\n<li>\n<p>使用 <code>logman</code>  创建和控制事件跟踪进程</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 每一次监控，可以更改名称 AMSITraceTest.etl</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 开始跟踪</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> start 开始 -ets 直接向事件跟踪会话发送命令，无需保存或调度</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> --% 告诉powershell 停止解释内联PS代码的命令行</span></span><br><span class=\"line\">logman --% start AMSITraceTest -p Microsoft-Antimalware-Scan-Interface (Event1) 0x4 -o AMSITraceTest.etl -ets</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>执行 PowerShell 脚本</p>\n</li>\n<li>\n<p>结束跟踪</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">logman stop AMSITraceTest -ets</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>读取事件内容</p>\n<p>编写一个 <code>GetAMSI.ps1</code> , 然后导入  <code>. GetAMSI.ps1</code></p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Get-AMSITraceEvent</span></span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">param</span> (</span><br><span class=\"line\">    [<span class=\"type\">Parameter</span>(<span class=\"type\">Mandatory</span>)]</span><br><span class=\"line\">    [<span class=\"built_in\">String</span>]</span><br><span class=\"line\">    <span class=\"variable\">$FilePath</span></span><br><span class=\"line\">  )</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"built_in\">Get-WinEvent</span> <span class=\"literal\">-Path</span> <span class=\"variable\">$FilePath</span> <span class=\"literal\">-Oldest</span> <span class=\"literal\">-FilterXPath</span> <span class=\"string\">&#x27;*[System[EventID = 1101]]&#x27;</span> | <span class=\"built_in\">ForEach-Object</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (<span class=\"variable\">$_</span>.Properties[<span class=\"number\">2</span>].Value) &#123;</span><br><span class=\"line\">      <span class=\"number\">0</span> &#123; <span class=\"variable\">$ScanResult</span> = <span class=\"string\">&#x27;AMSI_RESULT_CLEAN&#x27;</span> &#125;</span><br><span class=\"line\">      <span class=\"number\">1</span> &#123; <span class=\"variable\">$ScanResult</span> = <span class=\"string\">&#x27;AMSI_RESULT_NOT_DETECTED&#x27;</span> &#125;</span><br><span class=\"line\">      <span class=\"number\">32768</span> &#123; <span class=\"variable\">$ScanResult</span> = <span class=\"string\">&#x27;AMSI_RESULT_DETECTED&#x27;</span> &#125;</span><br><span class=\"line\">      default &#123; <span class=\"variable\">$ScanResult</span> = <span class=\"variable\">$_</span>.Properties[<span class=\"number\">2</span>].Value &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable\">$ObjectProperties</span> = [<span class=\"type\">Ordered</span>] <span class=\"selector-tag\">@</span>&#123;</span><br><span class=\"line\">      TimeCreated = <span class=\"variable\">$_</span>.TimeCreated</span><br><span class=\"line\">      ProcessId = <span class=\"variable\">$_</span>.ProcessId</span><br><span class=\"line\">      ThreadId = <span class=\"variable\">$_</span>.ThreadId</span><br><span class=\"line\">      Session = <span class=\"variable\">$_</span>.Properties[<span class=\"number\">0</span>].Value</span><br><span class=\"line\">      ScanStatus = <span class=\"variable\">$_</span>.Properties[<span class=\"number\">1</span>].Value</span><br><span class=\"line\">      ScanResult = <span class=\"variable\">$ScanResult</span></span><br><span class=\"line\">      AppName = <span class=\"variable\">$_</span>.Properties[<span class=\"number\">3</span>].Value</span><br><span class=\"line\">      ContentName = <span class=\"variable\">$_</span>.Properties[<span class=\"number\">4</span>].Value</span><br><span class=\"line\">      ContentSize = <span class=\"variable\">$_</span>.Properties[<span class=\"number\">5</span>].Value</span><br><span class=\"line\">      OriginalSize = <span class=\"variable\">$_</span>.Properties[<span class=\"number\">6</span>].Value</span><br><span class=\"line\">      Content = ([<span class=\"type\">Text.Encoding</span>]::Unicode.GetString(<span class=\"variable\">$_</span>.Properties[<span class=\"number\">7</span>].Value))</span><br><span class=\"line\">      Hash = ((<span class=\"variable\">$_</span>.Properties[<span class=\"number\">8</span>].Value | % &#123; <span class=\"string\">&#x27;&#123;0:X2&#125;&#x27;</span> <span class=\"operator\">-f</span> <span class=\"variable\">$_</span> &#125;) <span class=\"operator\">-join</span> <span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">      ContentFiltered = <span class=\"variable\">$_</span>.Properties[<span class=\"number\">9</span>].Value</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">New-Object</span> <span class=\"literal\">-TypeName</span> psobject <span class=\"literal\">-Property</span> <span class=\"variable\">$ObjectProperties</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后在 powershell 中执行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Get-AMSITraceEvent -FilePath ./AMSITraceTest.etl</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n",
            "tags": [
                "powershell"
            ]
        },
        {
            "id": "https://snowroll.github.io/powershell-2/",
            "url": "https://snowroll.github.io/powershell-2/",
            "title": "powershell多线程超时",
            "date_published": "2022-01-10T12:54:31.000Z",
            "content_html": "<h3 id=\"内容摘要\"><a class=\"markdownIt-Anchor\" href=\"#内容摘要\">#</a> 内容摘要</h3>\n<ul>\n<li>PowerShell 超时退出</li>\n<li>PowerShell 多线程</li>\n</ul>\n<a id=\"more\"></a>\n<h3 id=\"1-powershell多线程\"><a class=\"markdownIt-Anchor\" href=\"#1-powershell多线程\">#</a> 1. PowerShell 多线程</h3>\n<ul>\n<li>\n<p>PowerShell 超时退出</p>\n<p>当我们重复执行某一项程序时，当程序在规定时间内没有返回结果时，我们需要杀死它以开始下一轮的迭代。这时就需要用到超时退出。在 PowerShell 脚本中又如何实现呢？</p>\n<p>我们需要用到 <code>Start-Process</code>  和 <code>Wait-Process</code>  来控制子进程的执行时间以实现超时退出。</p>\n<p>示例：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"variable\">$i</span>=<span class=\"number\">0</span>; <span class=\"variable\">$i</span> <span class=\"operator\">-le</span> <span class=\"variable\">$max_iterations</span>; <span class=\"variable\">$i</span>++)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"variable\">$proc</span> = <span class=\"built_in\">Start-Process</span> <span class=\"literal\">-filePath</span> <span class=\"variable\">$programtorun</span> <span class=\"literal\">-ArgumentList</span> <span class=\"variable\">$argumentlist</span> <span class=\"literal\">-workingdirectory</span> <span class=\"variable\">$programtorunpath</span> <span class=\"literal\">-PassThru</span></span><br><span class=\"line\">    <span class=\"comment\"># wait up to x seconds for normal termination</span></span><br><span class=\"line\">    <span class=\"built_in\">Wait-Process</span> <span class=\"literal\">-Timeout</span> <span class=\"number\">300</span> <span class=\"literal\">-Name</span> <span class=\"variable\">$programname</span></span><br><span class=\"line\">    <span class=\"comment\"># if not exited, kill process</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"variable\">$proc</span>.hasExited) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">echo</span><span class=\"string\">&quot;kill the process&quot;</span></span><br><span class=\"line\">        <span class=\"comment\">#$proc.Kill() &lt;- not working if proc is crashed</span></span><br><span class=\"line\">        <span class=\"built_in\">Start-Process</span> <span class=\"literal\">-filePath</span><span class=\"string\">&quot;taskkill.exe&quot;</span> <span class=\"literal\">-Wait</span> <span class=\"literal\">-ArgumentList</span> <span class=\"string\">&#x27;/F&#x27;</span>, <span class=\"string\">&#x27;/IM&#x27;</span>, <span class=\"variable\">$fullprogramname</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\"># this is where I want to use exit code but it comes in empty</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable\">$proc</span>.ExitCode <span class=\"operator\">-ne</span> <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">       <span class=\"comment\"># update internal error counters based on result</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n",
            "tags": [
                "powershell"
            ]
        },
        {
            "id": "https://snowroll.github.io/powershell-1/",
            "url": "https://snowroll.github.io/powershell-1/",
            "title": "powershell技巧连载（一） —— 文件相关操作",
            "date_published": "2021-10-20T04:00:38.000Z",
            "content_html": "<h3 id=\"内容摘要\"><a class=\"markdownIt-Anchor\" href=\"#内容摘要\">#</a> 内容摘要</h3>\n<ul>\n<li>文件路径操作</li>\n<li>文件读写操作</li>\n<li>其他文件相关操作</li>\n</ul>\n<a id=\"more\"></a>\n<p>####1. 文件路径操作</p>\n<ul>\n<li>\n<p>获取当前文件的绝对路径</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 方法1</span></span><br><span class=\"line\">(<span class=\"built_in\">Get-Item</span> test.txt).FullName</span><br><span class=\"line\"><span class=\"comment\"># 方法2</span></span><br><span class=\"line\">(<span class=\"built_in\">Get-Childitem</span> test.txt).FullName</span><br></pre></td></tr></table></figure>\n<p>结果</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\Users\\root\\Desktop\\test.txt</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>获取文件所在目录路径</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 方法1: 通过文件系统获取</span></span><br><span class=\"line\">(<span class=\"built_in\">Get-Item</span> test.txt).Directory.FullName</span><br><span class=\"line\">(<span class=\"built_in\">Get-Childitem</span> test.txt).Directory.FullName</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法2: 利用split-path 切割路径</span></span><br><span class=\"line\"><span class=\"variable\">$filePath</span> = (<span class=\"built_in\">Get-Item</span> test.txt).FullName</span><br><span class=\"line\"><span class=\"built_in\">Split-Path</span> <span class=\"variable\">$filePath</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># split-path 获取文件名</span></span><br><span class=\"line\"><span class=\"built_in\">Split-Path</span> <span class=\"variable\">$filePath</span> <span class=\"literal\">-Leaf</span></span><br></pre></td></tr></table></figure>\n<p>结果</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\Users\\root\\Desktop</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>判断当前路径是文件还是文件夹</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$path</span> = <span class=\"string\">&#x27;\\Users\\root\\Desktop&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># 方法1 Test-Path</span></span><br><span class=\"line\"><span class=\"built_in\">Test-Path</span> <span class=\"variable\">$path</span> <span class=\"literal\">-PathType</span> Container</span><br><span class=\"line\"><span class=\"built_in\">Test-Path</span> <span class=\"variable\">$path</span> <span class=\"literal\">-PathType</span> Leaf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法3 Get-Item</span></span><br><span class=\"line\">(<span class=\"built_in\">Get-Item</span> <span class=\"variable\">$path</span>) <span class=\"operator\">-is</span> [<span class=\"type\">IO.fileinfo</span>]</span><br><span class=\"line\">(<span class=\"built_in\">Get-Item</span> <span class=\"variable\">$path</span>) <span class=\"operator\">-is</span> [<span class=\"type\">IO.DirectoryInfo</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法2 System.IO 最快</span></span><br><span class=\"line\">[<span class=\"type\">System.IO.Directory</span>]::Exists(<span class=\"variable\">$path</span>)</span><br><span class=\"line\">[<span class=\"type\">System.IO.File</span>]::Exits(<span class=\"variable\">$path</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>相对路径转换为绝对路径</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"built_in\">Resolve-Path</span> <span class=\"string\">&#x27;./&#x27;</span>).Path</span><br></pre></td></tr></table></figure>\n<p>结果</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\Users\\root\\Desktop</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>获取文件夹下所有文件</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 获取当前目录下所有文件名</span></span><br><span class=\"line\">(<span class=\"built_in\">Get-Childitem</span> <span class=\"string\">&#x27;./&#x27;</span>).Name</span><br><span class=\"line\"><span class=\"comment\"># 获取当前目录下所有文件的绝对路径</span></span><br><span class=\"line\">(<span class=\"built_in\">Get-Childitem</span> <span class=\"string\">&#x27;./&#x27;</span>).FullName</span><br></pre></td></tr></table></figure>\n<p>结果</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">test.txt</span><br><span class=\"line\">demo.txt</span><br><span class=\"line\">\\Users\\root\\Desktop\\test.txt</span><br><span class=\"line\">\\Users\\root\\Desktop\\demo.txt</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>Tips： 测试代码运行时间</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Measure-Command</span> &#123;Command or a code block&#125;</span><br><span class=\"line\"><span class=\"comment\"># example</span></span><br><span class=\"line\"><span class=\"built_in\">Measure-Command</span> &#123;<span class=\"built_in\">Test-Path</span> <span class=\"string\">&#x27;./test.txt&#x27;</span> <span class=\"literal\">-PathType</span> Leaf&#125;</span><br></pre></td></tr></table></figure>\n<p>结果</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Days              : 0</span><br><span class=\"line\">Hours             : 0</span><br><span class=\"line\">Minutes           : 0</span><br><span class=\"line\">Seconds           : 0</span><br><span class=\"line\">Milliseconds      : 1</span><br><span class=\"line\">Ticks             : 12989</span><br><span class=\"line\">TotalDays         : 1.50335648148148E-08</span><br><span class=\"line\">TotalHours        : 3.60805555555556E-07</span><br><span class=\"line\">TotalMinutes      : 2.16483333333333E-05</span><br><span class=\"line\">TotalSeconds      : 0.0012989</span><br><span class=\"line\">TotalMilliseconds : 1.2989</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>####2. 文件读写操作</p>\n<ul>\n<li>\n<p>读文件</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 按行读入，得到一个数组</span></span><br><span class=\"line\"><span class=\"variable\">$content</span> = <span class=\"built_in\">Get-Content</span> <span class=\"string\">&#x27;test.txt&#x27;</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 一次性读入所有的文件</span></span><br><span class=\"line\"><span class=\"variable\">$content</span> = <span class=\"built_in\">Get-Content</span> <span class=\"string\">&#x27;test.txt&#x27;</span> <span class=\"literal\">-Raw</span></span><br><span class=\"line\"><span class=\"variable\">$content</span> = [<span class=\"type\">io.file</span>]::ReadAllLines(<span class=\"variable\">$file</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>写文件</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$content</span> = <span class=\"string\">&#x27;Hello World!&#x27;</span></span><br><span class=\"line\"><span class=\"variable\">$file</span> = <span class=\"string\">&#x27;test.txt&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># 方法1 Out-File 通过管道（比较慢）</span></span><br><span class=\"line\"><span class=\"variable\">$content</span> | <span class=\"built_in\">Out-File</span> <span class=\"variable\">$file</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法2 Out-File</span></span><br><span class=\"line\"><span class=\"built_in\">Out-File</span> <span class=\"variable\">$file</span> <span class=\"literal\">-InputObject</span> <span class=\"variable\">$content</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法3 io.file</span></span><br><span class=\"line\">[<span class=\"type\">io.file</span>]::WriteAllLines(<span class=\"variable\">$file</span>, <span class=\"variable\">$content</span>, [<span class=\"type\">text.encoding</span>]::Unicode)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法4 Set-Content</span></span><br><span class=\"line\"><span class=\"built_in\">Set-Content</span> <span class=\"variable\">$file</span> <span class=\"literal\">-Value</span> <span class=\"variable\">$content</span> <span class=\"literal\">-Encoding</span> Unicode</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法5 命令行操作</span></span><br><span class=\"line\"><span class=\"variable\">$content</span> &gt; <span class=\"variable\">$file</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>####3. 其他文件相关操作</p>\n<ul>\n<li>\n<p>文件复制</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Copy-Item</span> <span class=\"variable\">$srcFile</span> <span class=\"variable\">$dstFile</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>文件移动</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Move-Item</span> <span class=\"variable\">$srcFile</span> <span class=\"variable\">$dstFile</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>文件删除</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Remove-Item</span> <span class=\"variable\">$file</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<center>To say goodbye is to die a little.\n<p align=\"right\">——《The Long Goodbye》",
            "tags": [
                "powershell"
            ]
        }
    ]
}